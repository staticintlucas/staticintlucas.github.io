@import "variables";

html {
    height: 100%;
}

body {
    background-color: $background;
    color: $foreground;
    padding: $body-spacing;
    box-sizing: border-box;
    font-size: $font-size;
    line-height: $font-line-height;
    font-family: $font-family;
    font-weight: $font-weight;
    letter-spacing: $font-letter-spacing;
    text-rendering: optimizeLegibility;
    min-height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;

    @include large {
        flex-direction: row-reverse;
        align-items: stretch;
        justify-content: center;
    }

    ::selection {
        background-color: $selection-bg;
        color: $selection-fg;
        text-shadow: none;
    }

    >header {
        width: 100%;
        margin-bottom: $v-spacing;

        @include large {
            width: auto;
            margin: $sidebar-v-spacing 0 $sidebar-v-spacing $sidebar-spacing;
        }
    }
}

main {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: center;
    width: 100%;
    max-width: $max-content-width;

    >article, footer {
        width: 100%;
    }

    >article {
        flex-grow: 1;
        margin-bottom: $v-spacing;

        * {
            flex: 1; // Fix for weird text overflow IE 10/11
        }

        :first-child {
            margin-top: 0;
        }

        :last-child {
            margin-bottom: 0;
        }
    }

    >footer {
        font-size: $footer-font-size;
        color: $greyed-out;
    }
}

header>nav {
    font-size: $header-font-size;

    @include large {
        position: sticky;
        top: $body-spacing + $sidebar-v-spacing - ($inline-v-spacing / 2);
    }

    ul{
        list-style: none;
        display: flex;
        flex-direction: row;
        align-items: baseline;
        flex-wrap: wrap;
        margin: (-$inline-v-spacing / 2) (-$h-spacing / 2);

        @include large {
            flex-direction: column;
            align-items: flex-start;
            margin: (-$inline-v-spacing / 2) 0;
        }

        &, & li {
            padding-left: 0;
        }

        >li {
            margin: ($inline-v-spacing / 2) ($h-spacing / 2);

            @include large {
                margin: ($inline-v-spacing / 2) 0;
            }

            &:first-child {
                margin-right: auto;

                @include mobile {
                    width: 100%;
                }
            }
        }

        a {
            background: none;
        }

        a.title {
            code {
                background: transparent;
                font-size: $title-font-size;
                padding: 0;

                >span {
                    transition: color 0.2s ease-out;
                }
            }

            &:hover code>span, &:focus code>span {
                color: $active-fg;
            }
        }
    }
}

p, form, h1, h2, h3, h4, h5, h6, ul, ol, div.highlighter-rouge, table, blockquote, hr {
    margin: 0 0 $paragraph-spacing;
}

h1, h2, h3, h4, h5, h6 {
    font-family: $header-font-family;
    font-weight: $header-font-weight;
    text-decoration: none;
    margin-top: $inline-v-spacing;
    border-bottom: solid $grey-thickness $greyed-out;
}

h1 {
    font-size: $h1-font-size;
}

h2 {
    font-size: $h2-font-size;
}

h3 {
    font-size: $h3-font-size;
}

h4 {
    font-size: $h4-font-size;
}

h5 {
    font-size: $h5-font-size;
}

h6 {
    font-size: $h6-font-size;
    color: $greyed-out;
}

i, em {
    font-style: italic;
}

b, strong {
    font-weight: bold;
}

u, ins {
    text-decoration: underline;
    text-decoration-color: $greyed-out;
    text-decoration-thickness: $underline-thickness;
    text-decoration-skip-ink: all;
}

s, del {
    text-decoration: line-through;
    text-decoration-color: $greyed-out;
    text-decoration-thickness: $underline-thickness;
}

ul, ol {
    padding-left: $list-h-spacing;

    >li {
        padding-left: $li-h-spacing;

        &::marker {
            color: $highlight;
        }
    }
}

ul {
    list-style-type: square;

    >li::marker {
        font-size: $bullet-font-size;
    }
}

ol {
    list-style-type: decimal;
}

a, a u {
    color: $foreground;
    text-decoration: none;
    box-decoration-break: clone;
    background-image: $a-background-image;
    background-repeat: no-repeat;
    background-size: 100% $a-uline-thickness;
    background-position: bottom $a-uline-offset center;
    text-shadow: $a-text-shadow;
    // Also transition -webkit-margin-start, an inconsequential webkit-only style to force a redraw.
    // See: https://stackoverflow.com/questions/36046185/
    transition: color 0.2s ease-out, -webkit-margin-start 0.2s ease-out;
    will-change: color, background-image;
    -webkit-margin-start: .00001px;

    &:hover, &:focus {
        color: $active-fg;
        -webkit-margin-start: 0;
    }
}

img {
    max-width: 100%;
    display: block;
    margin: 0 auto;
}

pre, code {
    font-family: $mono-font-family;
    font-size: $mono-font-size;
    letter-spacing: $mono-letter-spacing;
    line-height: $mono-line-height;
    background: $lighter;
    padding: $mono-padding;
}

pre.highlight {
    // TODO use CSS counters instead when https://github.com/gettalong/kramdown/issues/617 is
    // resolved and HTMLLinewise can be used.

    &, code, pre {
        padding: 0;
    }

    >code>table {
        width: 100%;
        table-layout: fixed;
        border-left: solid $highlight-line $highlight;

        td, th {
            word-wrap: none;
            padding: 0;

            &:first-of-type {
                width: 1.65 * $code-h-spacing;
                padding-right: $code-h-spacing;
                text-align: end;
                user-select: none;
            }

            >pre {
                width: 100%;
                padding: $code-v-spacing 0;
                overflow-x: auto;
            }
        }
    }
}

blockquote {
    font-style: italic;
    background: $lighter;
    padding: $quote-h-spacing $quote-v-spacing;
    border-left: solid $highlight-line $highlight;

    >p {
        quotes: initial; // To override the reset, auto is not supported by !Firefox
        quotes: auto;
        margin: 0;

        &::before, &::after {
            display: inline;
        }

        &::before {
            content: open-quote;
        }

        &::after {
            content: close-quote;
        }
    }
}


table {
    background: $lighter;

    thead {
        color: $greyed-out;
        border-bottom: solid $highlight-line $highlight;
    }

    tfoot {
        color: $greyed-out;
        border-top: solid $highlight-line $highlight;
    }
}

th, td {
    padding: 0 $table-h-spacing;

    tr:first-child & {
        padding-top: $table-v-spacing;
    }

    tr:last-child & {
        padding-bottom: $table-v-spacing;
    }
}

hr {
    width: 40%;
    height: $grey-thickness;
    border: none;
    background: $greyed-out;
    margin: 2 * $paragraph-spacing auto;
}

.fa, .fab, .fad, .fal, .far, .fas {
    vertical-align: -0.075em;
}
